* My Personal Emacs Configuration

This Emacs configuration only has the absolute necessary configurations tailored
for my needs. If I need additional feature and package, I can add them later.

It's easier to keep track that way, than trying to keep up with gazillions of
pre-installed packages that I don't use.

This configuration tries not to be a one-size-fits all configuration, but it
tries to be an Emacs configuration that suits me, that I keep it personal,
clean, easy and sensible.

** Files

For starters, it includes a =.gitignore=, which ignores all directories, except
the following files and directories:

#+BEGIN_SRC text
├── about-me.el
├── config
│   └── *
├── init.el
├── pkgs
│   └── *
├── README.org
└── themes
    └── *
#+END_SRC

** Packages

It uses the following packages by default, the individual elisp packages are
source directly from the website, while other packages are hosted and are
managed by =git submodules=.

  - [[https://github.com/emacscollective/no-littering][no-littering]] :: ensure .emacs.d folder is clean
  - [[https://www.emacswiki.org/emacs/backup-each-save.el][backup-each-save.el]] :: backup files on each save
  - [[https://git.sr.ht/~technomancy/better-defaults][better-defaults.el]] :: the base defaults
  - [[https://github.com/purcell/exec-path-from-shell][exec-path-from-shell]] :: made $PATH available inside Emacs
  - [[https://github.com/arcticicestudio/nord-emacs][nord-emacs]] :: default theme
  - [[https://github.com/rougier/emacs-gtd][GTD.org.el]] :: Rougier's org-mode GTD workflow presets
  - [[https://www.emacswiki.org/emacs/download/multiple-line-edit.el][multiple-line-edit.el]] :: select lines simultaneously
  - [[https://github.com/cyrus-and/zoom][zoom]] :: auto-resize active windows

** File Locations

All personal configurations, org-notes, backups and auto-saves are stored in the
=~/Downloads/Emacs/= directory. Those files should not be committed to GIT, but
they should be managed via your file-sync utility (i.e. iCloud, Dropbox, etc.).

Package configs and variable files are stored in =~/Documents/Emacs/config/= and
=~/Documents/Emacs/data/= respectively.

Org workdir are set to =~/Documents/Emacs/org/=.

** Behavior

On startup, Emacs will present this =README.org= document.

The default Emacs =pulse.el= is pre-configured to provide visual feedback
on the current line when switching buffers.

Buffers are automatically-sized using =zoom= when created.

** Commenting

Commenting and uncommenting a line is mapped to =CMD-/= or =S-/=.

** Multiple select and edit

Here's the key-stroke to use the multiple select and edit feature.

- C-c C-SPC :: Select and edit leading edges
- C-c M-SPC :: Select and edit trailing edges

** GTD org-mode files
I use Rougier's [[https://github.com/rougier/emacs-gtd][GTD.org.el]] GTD configuration and presets for managing my tasks
and agenda. All the org files are stored in =~/Documents/Emacs/org/= folder. The
plugin has pre-configured 4 org-files by default. Here's the recommended config
per each file that should be put on top of each file.

*** ~/Documents/Emacs/org/agenda.org
#+BEGIN_SRC org
#+STARTUP: content showstars indent
#+TAGS: @home(h) @work(w) @mail(m) @comp(c) @web(b)
#+PROPERTY: Effort_ALL 0 0:05 0:10 0:15 0:30 0:45 1:00 2:00 4:00
#+FILETAGS: agenda
#+END_SRC

*** ~/Documents/Emacs/org/inbox.org
#+BEGIN_SRC org
#+STARTUP: content showstars indent
#+FILETAGS: inbox
#+END_SRC

*** ~/Documents/Emacs/org/notes.org
#+BEGIN_SRC org
#+STARTUP: content showstars indent
#+FILETAGS: notes
#+END_SRC

*** ~/Documents/Emacs/org/projects.org
#+BEGIN_SRC org
#+STARTUP: content showstars indent
#+TAGS: @home(h) @work(w) @mail(m) @comp(c) @web(b)
#+PROPERTY: Effort_ALL 0 0:05 0:10 0:15 0:30 0:45 1:00 2:00 4:00
#+FILETAGS: projects
#+END_SRC

** Rougier's org-mode GTD Key Bindings

Aside from the classic default keys. Here's important key-strokes for using the
=GTD.org.el= presets.

| Command                          | Bindings             | Mode + where           |
|----------------------------------+----------------------+------------------------|
| Agenda                           | *C-c a*              | any                    |
| Agenda for today                 | *C-c a a*            | any                    |
|                                  |                      |                        |
| Capture menu                     | *C-c c*              | any                    |
| Capture meeting (agenda.org)     | *C-c c m*            | any                    |
| Capture meeting note (notes.org) | *C-c c n*            | any                    |
| Capture generic TODO (inbox.org) | *C-c i* or *C-c c i* | any                    |
| Capture mail TODO (inbox.org)    | *C-c i* or *C-c c @* | mu4e view/headers mode |
|                                  |                      |                        |
| Add/Remove tag                   | *C-c C-c*            | org-mode on headline   |
| Update progress indicator        | *C-c C-c*            | org-mode on [/]        |
| Update all progress indicators   | *C-u C-c #*          | org-mode               |
| Enter estimated effort           | *C-c C-x e*          | org-mode on headline   |
| Refile section                   | *C-c C-w*            | org-mode on headline   |
| Move to next TODO state          | *S-right*            | org-mode on TODO       |
|                                  |                      |                        |
| Clock in                         | *C-c C-x C-i*        | org-mode on headline   |
| Clock out                        | *C-c C-x C-o*        | org-mode on headline   |
|                                  |                      |                        |
| Plain timestamp                  | *C-c .*              | org-mode               |
| Scheduled timestamp              | *C-c s*              | org-mode               |
| Deadline timestamp               | *C-c d*              | org-mode               |
| Inactive timestamp               | *C-c !*              | org-mode               |

** Further Customizations

Some packages are easy to include in the configuration, while other packages
requires post-installation procedures. In those packages, it's recommended to
use [[https://elpa.gnu.org/][GNU ELPA]] and [[https://melpa.org/][MELPA]].

The configuration contains the basic necessary settings for MELPA to readily use
it, which you can download the MELPA package and load those packages on startup.

Here's the most recommended packages to install, some are pre-configured.

*** version-control
- [[https://magit.vc/][magit]] :: a complete text-based user interface to Git.
  - C-x g ? :: Git status then press =?= to display all git actions
  - q :: quit the Magit status window
  - s :: git add
  - b b :: git checkout <branch>
  - k :: git checkout <file>
  - c c :: git commit
    - C-x s and C-c :: save and apply commit
    - a :: git commit --amend
  - P p :: git push
  - g :: refresh Magit window

*** development
If you are looking for a lightweight development combinations, install the
following packages, otherwise you can install the =company-mode= and =lsp-mode=,
which I don't use.

- [[https://github.com/auto-complete/auto-complete][auto-complete]] :: provides auto-completion (pre-configured)
- [[https://github.com/aki2o/org-ac][org-ac]] :: provides auto-completion on org-mode (pre-configured)
- [[https://web-mode.org/][web-mode]] :: major mode for editing web templates and css files (pre-configured)
- [[https://github.com/mooz/js2-mode][js2-mode]] :: improved JavaScript editing (pre-configured)
- [[https://github.com/prettier/prettier-emacs][prettier]] :: auto beautify both HTML & JS files on save (pre-configured), requires =prettier= to be installed.

*** code navigation
- [[https://github.com/jacktasia/dumb-jump][dumb-jump]] :: jump to definition, requires =ag= and =grep= (pre-configured)
  - M-. :: jump to definition
  - M-, :: jump to next definition

*** spell check and grammar
- [[https://github.com/mhayashi1120/Emacs-langtool][langtool]] :: provides an Emacs interface to =LanguageTool= (pre-configured)
  - Download the desktop version of LanguageTool from [[https://languagetool.org/]].
  - Modify the =config/melpa.el= to point to your =languagetool-commandline.jar=
  - Change the default language from =en-US= to your preferred locale
  - Keystrokes
    - C-x 4w :: check spelling and grammar
    - C-x 4W :: end all check
    - C-x 4l :: switch default language
    - C-x 44 :: show message at point
    - C-x 4c :: correct buffer

*** code syntax check
- [[https://www.flycheck.org/][flycheck]] :: code syntax checking for Emacs (pre-configured)
  - install the supported flycheck supported [[https://www.flycheck.org/en/latest/languages.html#flycheck-languages][languages]].
  - Keystrokes
    - C-c ! l :: pop-up list of all errors in the current buffer
    - C-c ! n and C-c ! p ::  next/previous errors in the current buffer
    - C-c ! v :: show currrent setup on buffer

*** workspaces management
- [[https://github.com/Bad-ptr/persp-mode.el][persp-mode]] :: switch to different workspace per given workspace name
  - C-c p ? :: show persp-mode keys
  - C-c p s :: switch or create workspace
  - C-c p n or C-c p p :: next/previous workspaces
  - C-c p c :: copy workspace
  - C-c p C :: delete workspace
  - C-c p r :: rename workspace
